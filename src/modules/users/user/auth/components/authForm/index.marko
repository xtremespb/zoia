import cookies from "zoia-cookies"
import { v4 as uuid } from "uuid";

class {
  onCreate(input, out) {
    this.t = out.global.t;
    this.redirectURL = out.global.siteData.redirectURL;
    this.cookieOptions = out.global.cookieOptions;
    this.siteId = out.global.siteData.siteId;
    this.language = out.global.siteData.language;
    this.languagePrefixURL = out.global.siteData.languagePrefixURL || "/";
  }
  onSaveError(res) {
    if (res && res.data && res.data.statusCode === 401) {
      return this.getComponent("authForm").setErrorMessage(this.t["Invalid username or password"]);
    }
    this.getComponent("authForm").setErrorMessage(this.t["Could not authorize"]);
  }
  onSaveSuccess(res) {
    const { token } = res.data;
    const reduxData = cookies.get(`persist:${this.siteId}_root`, this.cookieOptions);
    console.log(reduxData);
    if (reduxData) {
      try {
        const reduxDataJSON = JSON.parse(reduxData);
        const appData = JSON.parse(reduxDataJSON.appData);
        appData.language = this.language;
        appData.user = {
          username: res.data.username
        };
        reduxDataJSON.appData = JSON.stringify(appData);
        cookies.set(`persist:${this.siteId}_root`, JSON.stringify(reduxDataJSON), this.cookieOptions);
      } catch (e) {
        cookies.set(`persist:${this.siteId}_root`, `{"appData":"{\\"language\\":\\"${this.language}\\",\\"user\\":{\\"username\\":\\"${res.data.username}\\"}}","_persist":"{\\"version\\":-1,\\"rehydrated\\":true}"}`, this.cookieOptions);
      }
    } else {
      cookies.set(`persist:${this.siteId}_root`, `{"appData":"{\\"language\\":\\"${this.language}\\",\\"user\\":{\\"username\\":\\"${res.data.username}\\"}}","_persist":"{\\"version\\":-1,\\"rehydrated\\":true}"}`, this.cookieOptions);
    }
    cookies.set(`${this.siteId}_auth`, token, this.cookieOptions);
    this.getComponent("authForm").setLoading(true);
    location.href = `${this.redirectURL ? this.redirectURL : this.languagePrefixURL}?_=${uuid()}`;
  }
  onLogOutButtonClick() {
    cookies.expire(`${this.siteId}_auth`, undefined, this.cookieOptions);
    location.href = `${this.languagePrefixURL || '/'}?_=${uuid()}`;
  }
}

<div>
  <if(out.global.siteData.user && out.global.siteData.user.username)>
    <div class="uk-margin-top">${out.global.t["You are successfully authorized on this website. Click on the button below if you wish to log out."]}</div>
    <div class="uk-margin-top">
      <button type="button" class="uk-button uk-button-primary" on-click("onLogOutButtonClick")>${out.global.t["Log Out"]}</button>
    </div>
  </if>
  <else>
    <if(out.global.siteData.activationSuccess)>
      <div class="uk-alert-success uk-alert uk-margin-remove" uk-alert>
        <a class="uk-alert-close" uk-close/>
        <p>${out.global.t["Your account has been successfully activated. You may use your username and password to sign in to the website."]}</p>
      </div>
    </if>
    <if(out.global.siteData.resetSuccess)>
      <div class="uk-alert-success uk-alert uk-margin-remove" uk-alert>
        <a class="uk-alert-close" uk-close/>
        <p>${out.global.t["Your password has been successfully reset. You may use your new password to sign in to the website."]}</p>
      </div>
    </if>
    <zoiaForm key="authForm" data=[
      [
        {
          id: "username",
          type: "text",
          label: out.global.t["Username"],
          css: "uk-input uk-form-width-medium",
          helpText: out.global.t["Latin characters and numbers"],
          mandatory: true,
          pattern: "^[a-zA-Z0-9_-]{4,32}$",
          autoFocus: true
        },
        {
          id: "password",
          type: "text",
          label: out.global.t["Password"],
          css: "uk-input uk-form-width-medium",
          textType: "password",
          minLength: 8,
          maxLength: 64,
          mandatory: true
        }
      ],
      {
        id: "div1",
        type: "divider"
      },
      {
        id: "btn1",
        type: "button",
        label: out.global.t["Sign In"],
        buttonType: "submit",
        css: "uk-button uk-button-primary"
      }
    ] i18n={
      ERR_MANDATORY: out.global.t["Mandatory field"],
      ERR_FORMAT: out.global.t["Invalid format"],
      ERR_SHOULD_MATCH: out.global.t["Does not match"]
    } save={
      url: `${out.global.siteData.api}/api/users/login`,
      extras: {}
    } on-save-error("onSaveError") on-save-success("onSaveSuccess")/>
    <ul class="uk-list uk-text-small uk-list-bullet">
      <li>
        ${out.global.t["Forgot your password?"]}&nbsp;<a href=`${out.global.siteData.languagePrefixURL}/users/reset`>${out.global.t["Click here"]}</a>&nbsp;${out.global.t["to set a new password for your account"]}
      </li>
      <if(out.global.siteData.allowRegistration)>
        <li>
          ${out.global.t["Don't have an account yet?"]}&nbsp;<a href=`${out.global.siteData.languagePrefixURL}/users/register`>${out.global.t["Click here"]}</a>&nbsp;${out.global.t["to register a new account on this website"]}
        </li>
      </if>
    </ul>
  </else>
</div>
