import Cookies from "../../../../../shared/lib/cookies"

style.scss {
	@import "./pagesList.scss";
}

$ const cookies = new Cookies(out.global.cookieOptions);
$ const token = cookies.get(`${out.global.siteId || "zoia3"}.authToken`);
<div>
	<h1 class="z3-ap-head-thin">
		<span class="icon">
			<i class="mdi z3-ap-mdi-head mdi-dark mdi-text-box-outline"/>
		</span>&nbsp;${out.global.i18n.t("moduleTitle")}
	</h1>
	<div class="columns is-variable is-1 z3-ap-noselect">
		<div class="column is-narrow z3-ap-ps-tree-wrap">
			<mtree
				key="z3_ap_ps_tree"
				id="z3_ap_ps_tree"
				on-item-click("onTreeItemClick")
				on-add("onFolderAddClick")
				on-edit("onFolderEditClick")
				controls=true
				on-data-change("onTreeDataChange")
				keepuuid=true
				keepchecksum=true/>
		</div>
		<div class="column">
			<mtable
				key="z3_ap_ps_table"
				css="table is-bordered is-striped is-hoverable is-fullwidth"
				dataSource={
					method: "post",
					url: "/api/pages/list",
					data: {
						language: out.global.language,
						dir: state.dir
					},
					headers: {
						Authorization: `Bearer ${token}`
					}
				}
				id="pages"
				columns=[
					{
						id: "dir",
						title: out.global.i18n.t("dir"),
						css: "z3-ap-ps-list-dir",
						resize: true,
					},
					{
						id: "filename",
						title: out.global.i18n.t("filename"),
						css: "z3-ap-ps-list-filename",
						sortable: true,
						resize: true,
					},
					{
						id: "title",
						sortable: true,
						title: out.global.i18n.t("title")
					}
				]
				actions=[
					{
						id: "btnEdit",
						css: "button is-small is-light is-action-button",
						icon: "mdi mdi-lead-pencil",
						text: out.global.i18n.t("edit"),
						displayText: false,
						tooltip: false
					},
					{
						id: "btnDeleteGeneric",
						css: "button is-small is-danger",
						icon: "mdi mdi-trash-can-outline",
						text: out.global.i18n.t("delete"),
						displayText: false,
						tooltip: false
					}
				]
				buttons=[
					{
						id: "btnAdd",
						css: "button is-light",
						icon: "mdi mdi-plus-circle-outline",
						text: out.global.i18n.t("add"),
						displayText: true,
						tooltip: false
					},
					{
						id: "btnDeleteSelectedGeneric",
						css: "button is-danger",
						icon: "mdi mdi-trash-can-outline",
						text: out.global.i18n.t("delete"),
						displayText: true,
						tooltip: false
					},
					{
						id: "btnReload",
						css: "button is-light",
						icon: "mdi mdi-refresh",
						text: out.global.i18n.t("reload"),
						displayText: true,
						tooltip: false
					}
				]
				actionsTitle=out.global.i18n.t("actions")
				processValue=state.processValue
				sortId="title"
				sortDirection="asc"
				checkboxColumn=true
				on-action-click("onActionClick")
				on-top-button-click("onTopButtonClick")
				i18n=out.global.i18n
				genericDelete={
					title: "title",
					source: {
						method: "post",
						url: "/api/pages/edit/delete",
						data: {},
						headers: {
							Authorization: `Bearer ${token}`
						}
					}
				}
				on-unauthorized("onUnauthorized")
				autoItemsPerPage=true
				noAutoDataRequest=true/>
		</div>
	</div>
	<mnotify key="pagesList_mnotify"/>
	<editFolderModal key="z3_ap_ps_editModal" on-folder-save("onFolderSave")/>
</div>
