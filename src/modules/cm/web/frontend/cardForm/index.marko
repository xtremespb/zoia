import Cookies from "../../../../../shared/lib/cookies"
import generate from "../../../api/data/generate.json"

$ const cookies = new Cookies(out.global.cookieOptions);
$ const token = cookies.get(`${out.global.siteOptions.id || "zoia3"}.authToken`);
$ const holdingData = out.global.userHoldingData;
$ const common = out.global.common;
<mform key="z3_cm_cardForm" id="cardForm" save={
  url: "/api/cm/card/generate",
  extras: {},
  headers: {
    Authorization: `Bearer ${token}`
  }
} fields=[
  [
    {
      id: "cardNumber",
      type: "text",
      label: out.global.i18n.t("cardNumber"),
      wrapCSS: "z3-is-medium",
      convert: "integer",
      helpText: `${common.minCardNumber} - ${common.maxCardNumber}`,
      autoFocus: true
    },
    {
      id: "cardType",
      type: "select",
      label: out.global.i18n.t("cardType"),
      options: [{ value: 0, label: "–" }, ...holdingData.cards.map((c, i) => ({ value: i + 1, label: c.id.toUpperCase() }))],
      defaultValue: "0",
      css: "is-fullwidth",
      wrapCSS: "z3-is-medium",
      convert: "integer",
      mandatory: true
    },
    {
      id: "room",
      type: "select",
      label: out.global.i18n.t("room"),
      options: [{ value: 0, label: "–" }, ...holdingData.rooms.map((r, i) => ({ value: i + 1, label: r }))],
      defaultValue: "0",
      convert: "integer",
      css: "is-fullwidth",
      wrapCSS: "z3-is-large",
      mandatory: true
    }
  ],
  [
    {
      id: "customerName",
      type: "text",
      label: out.global.i18n.t("customerName"),
      wrapCSS: "z3-is-xlarge",
      mandatory: true
    },
    {
      id: "customerBirthDate",
      type: "text",
      label: out.global.i18n.t("customerBirthDate"),
      wrapCSS: "z3-is-small",
      helpText: out.global.i18n.t("customerBirthDateHelpText"),
      mandatory: true
    },
    {
      id: "customerPhone",
      type: "text",
      label: out.global.i18n.t("customerPhone"),
      helpText: out.global.i18n.t("customerPhoneHelpText"),
      wrapCSS: "z3-is-medium",
      mandatory: true
    },
    {
      id: "customerEmail",
      type: "text",
      label: out.global.i18n.t("customerEmail"),
      helpText: out.global.i18n.t("customerEmailHelpText"),
      wrapCSS: "z3-is-large",
      mandatory: false
    },
    {
      id: "customerAddress",
      type: "text",
      label: out.global.i18n.t("customerAddress"),
      wrapCSS: "z3-is-xlarge",
      mandatory: true
    }
  ],
  [
    {
      id: "date",
      type: "text",
      label: out.global.i18n.t("date"),
      helpText: out.global.i18n.t("dateHelpText"),
      wrapCSS: "z3-is-small",
      mandatory: true
    },
    {
      id: "price",
      type: "text",
      label: out.global.i18n.t("price"),
      helpText: out.global.i18n.t("priceHelpText"),
      wrapCSS: "z3-is-small",
      convert: "float",
    },
    {
      id: "years",
      type: "text",
      label: out.global.i18n.t("years"),
      helpText: out.global.i18n.t("yearsHelpText"),
      convert: "integer",
      wrapCSS: "z3-is-small"
    }
  ],
  {
    id: "msg1",
    type: "message",
    text: out.global.i18n.t("legacyOnly"),
    css: "mt-5 mb-3"
  },
  [
    {
      id: "creditSum",
      type: "text",
      label: out.global.i18n.t("creditSum"),
      convert: "float",
      wrapCSS: "z3-is-small"
    },
    {
      id: "creditPercentage",
      type: "text",
      convert: "float",
      label: out.global.i18n.t("creditPercentage"),
      wrapCSS: "z3-is-small"
    }
  ],
  {
    id: "div1",
    type: "divider"
  },
  {
    id: "bg1",
    type: "buttons",
    data: [
      {
        id: "btnGenerate",
        type: "button",
        buttonType: "submit",
        label: out.global.i18n.t("generate"),
        css: "is-primary"
      },
      {
        id: "btnReset",
        type: "button",
        buttonType: "button",
        label: out.global.i18n.t("reset"),
        css: "is-warning"
      }
    ]
  }
] validation=generate progressButtonId="btnGenerate" i18n=out.global.i18n manual=true on-form-submit("onFormSubmit") on-button-click("onButtonClick") on-post-success("onFormPostSuccess")/>
<mnotify key=`cardForm_mnotify`/>
<generateModal key="z3_cm_generateModal" on-confirm-click("onConfirmClick")/>
<certModal key="z3_cm_certModal"/>