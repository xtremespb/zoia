style.scss {
  @import "./mtreeItem.scss";
}

<if(input.data.isVisible)>
  <if(input.order === 0 && input.level > 0)>
    <mtreeGap level=input.level id=input.data.uuid order=input.order/>
  </if>
  <div style=`margin-left:${(input.level - 1) * 24}px;` class="z3-mtr-tree-item">
    <if(input.data.c && input.data.c.length)>
      <a href="" data-id=input.data.uuid on-click("onOpenCloseClick")>
        <if(input.data.isOpen)>
          <span class="icon">
            <i class="mdi mdi-minus-box-outline"/>
          </span>
        </if>
        <else>
          <span class="icon">
            <i class="mdi mdi-plus-box-outline"/>
          </span>
        </else>
      </a>
    </if>
    <else>
      <span class="icon" style="opacity:0">
        <i class="mdi mdi-checkbox-blank-outline"/>
      </span>
    </else>
    <a href="" data-id=input.data.uuid data-order=input.order data-len=input.len on-click("onItemClick") class=`z3-mtr-item-wrap${input.level > 0 ? " z3-mtr-subitem" : ""}` draggable=`${input.isDraggable || false}`>
      <span class="icon z3-mtr-icon-wrap">
        <i class=`z3-mtr-icon z3-mtr-icon-folder${input.data.isOpen ? "-open" : ""}`/>
      </span>
      <span class=`z3-mtr-label${input.selected === input.data.uuid ? " z3-mtr-label-selected" : ""}`>${input.data.t || input.data.id} ${input.order}</span>
    </a>
    <if(input.level > 0)>
      <mtreeGap level=input.level id=input.data.uuid order=input.order/>
    </if>
  </div>
  <if(input.data.c)>
    $ const level = input.level + 1;
    <for|item| of=input.data.c>
      <mtreeItem data=item level=level key=item.uuid on-open-close-click("onOpenCloseClick") on-item-click("onItemClick") selected=input.selected isDraggable=input.isDraggable/>
    </for>
  </if>
</if>
